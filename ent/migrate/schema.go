// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// CommentsColumns holds the columns for the "comments" table.
	CommentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
	}
	// CommentsTable holds the schema information for the "comments" table.
	CommentsTable = &schema.Table{
		Name:       "comments",
		Columns:    CommentsColumns,
		PrimaryKey: []*schema.Column{CommentsColumns[0]},
	}
	// LikesColumns holds the columns for the "likes" table.
	LikesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "comment_str", Type: field.TypeString},
	}
	// LikesTable holds the schema information for the "likes" table.
	LikesTable = &schema.Table{
		Name:       "likes",
		Columns:    LikesColumns,
		PrimaryKey: []*schema.Column{LikesColumns[0]},
	}
	// UserProfilesColumns holds the columns for the "user_profiles" table.
	UserProfilesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "username", Type: field.TypeString},
		{Name: "profile_image", Type: field.TypeString},
	}
	// UserProfilesTable holds the schema information for the "user_profiles" table.
	UserProfilesTable = &schema.Table{
		Name:       "user_profiles",
		Columns:    UserProfilesColumns,
		PrimaryKey: []*schema.Column{UserProfilesColumns[0]},
	}
	// UserSecsColumns holds the columns for the "user_secs" table.
	UserSecsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "password", Type: field.TypeString},
		{Name: "email", Type: field.TypeString},
		{Name: "address", Type: field.TypeString, Default: "0x0000000000000000000000000000000000000000"},
		{Name: "user_profile_user_secure", Type: field.TypeInt, Nullable: true},
	}
	// UserSecsTable holds the schema information for the "user_secs" table.
	UserSecsTable = &schema.Table{
		Name:       "user_secs",
		Columns:    UserSecsColumns,
		PrimaryKey: []*schema.Column{UserSecsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_secs_user_profiles_UserSecure",
				Columns:    []*schema.Column{UserSecsColumns[4]},
				RefColumns: []*schema.Column{UserProfilesColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// VideosColumns holds the columns for the "videos" table.
	VideosColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "desc", Type: field.TypeString},
		{Name: "video_link", Type: field.TypeString},
		{Name: "thumb", Type: field.TypeString},
		{Name: "like_num", Type: field.TypeUint64},
		{Name: "comment_num", Type: field.TypeUint64},
	}
	// VideosTable holds the schema information for the "videos" table.
	VideosTable = &schema.Table{
		Name:       "videos",
		Columns:    VideosColumns,
		PrimaryKey: []*schema.Column{VideosColumns[0]},
	}
	// UserSecVideoIdColumns holds the columns for the "user_sec_videoId" table.
	UserSecVideoIdColumns = []*schema.Column{
		{Name: "user_sec_id", Type: field.TypeInt},
		{Name: "videos_id", Type: field.TypeInt},
	}
	// UserSecVideoIdTable holds the schema information for the "user_sec_videoId" table.
	UserSecVideoIdTable = &schema.Table{
		Name:       "user_sec_videoId",
		Columns:    UserSecVideoIdColumns,
		PrimaryKey: []*schema.Column{UserSecVideoIdColumns[0], UserSecVideoIdColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_sec_videoId_user_sec_id",
				Columns:    []*schema.Column{UserSecVideoIdColumns[0]},
				RefColumns: []*schema.Column{UserSecsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_sec_videoId_videos_id",
				Columns:    []*schema.Column{UserSecVideoIdColumns[1]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserSecCommentIdColumns holds the columns for the "user_sec_commentId" table.
	UserSecCommentIdColumns = []*schema.Column{
		{Name: "user_sec_id", Type: field.TypeInt},
		{Name: "comments_id", Type: field.TypeInt},
	}
	// UserSecCommentIdTable holds the schema information for the "user_sec_commentId" table.
	UserSecCommentIdTable = &schema.Table{
		Name:       "user_sec_commentId",
		Columns:    UserSecCommentIdColumns,
		PrimaryKey: []*schema.Column{UserSecCommentIdColumns[0], UserSecCommentIdColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_sec_commentId_user_sec_id",
				Columns:    []*schema.Column{UserSecCommentIdColumns[0]},
				RefColumns: []*schema.Column{UserSecsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_sec_commentId_comments_id",
				Columns:    []*schema.Column{UserSecCommentIdColumns[1]},
				RefColumns: []*schema.Column{CommentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// UserSecLikeIdColumns holds the columns for the "user_sec_likeId" table.
	UserSecLikeIdColumns = []*schema.Column{
		{Name: "user_sec_id", Type: field.TypeInt},
		{Name: "likes_id", Type: field.TypeInt},
	}
	// UserSecLikeIdTable holds the schema information for the "user_sec_likeId" table.
	UserSecLikeIdTable = &schema.Table{
		Name:       "user_sec_likeId",
		Columns:    UserSecLikeIdColumns,
		PrimaryKey: []*schema.Column{UserSecLikeIdColumns[0], UserSecLikeIdColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "user_sec_likeId_user_sec_id",
				Columns:    []*schema.Column{UserSecLikeIdColumns[0]},
				RefColumns: []*schema.Column{UserSecsColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "user_sec_likeId_likes_id",
				Columns:    []*schema.Column{UserSecLikeIdColumns[1]},
				RefColumns: []*schema.Column{LikesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// VideosLikeIdColumns holds the columns for the "videos_likeId" table.
	VideosLikeIdColumns = []*schema.Column{
		{Name: "videos_id", Type: field.TypeInt},
		{Name: "likes_id", Type: field.TypeInt},
	}
	// VideosLikeIdTable holds the schema information for the "videos_likeId" table.
	VideosLikeIdTable = &schema.Table{
		Name:       "videos_likeId",
		Columns:    VideosLikeIdColumns,
		PrimaryKey: []*schema.Column{VideosLikeIdColumns[0], VideosLikeIdColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "videos_likeId_videos_id",
				Columns:    []*schema.Column{VideosLikeIdColumns[0]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "videos_likeId_likes_id",
				Columns:    []*schema.Column{VideosLikeIdColumns[1]},
				RefColumns: []*schema.Column{LikesColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// VideosCommentIdColumns holds the columns for the "videos_commentId" table.
	VideosCommentIdColumns = []*schema.Column{
		{Name: "videos_id", Type: field.TypeInt},
		{Name: "comments_id", Type: field.TypeInt},
	}
	// VideosCommentIdTable holds the schema information for the "videos_commentId" table.
	VideosCommentIdTable = &schema.Table{
		Name:       "videos_commentId",
		Columns:    VideosCommentIdColumns,
		PrimaryKey: []*schema.Column{VideosCommentIdColumns[0], VideosCommentIdColumns[1]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "videos_commentId_videos_id",
				Columns:    []*schema.Column{VideosCommentIdColumns[0]},
				RefColumns: []*schema.Column{VideosColumns[0]},
				OnDelete:   schema.Cascade,
			},
			{
				Symbol:     "videos_commentId_comments_id",
				Columns:    []*schema.Column{VideosCommentIdColumns[1]},
				RefColumns: []*schema.Column{CommentsColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		CommentsTable,
		LikesTable,
		UserProfilesTable,
		UserSecsTable,
		VideosTable,
		UserSecVideoIdTable,
		UserSecCommentIdTable,
		UserSecLikeIdTable,
		VideosLikeIdTable,
		VideosCommentIdTable,
	}
)

func init() {
	UserSecsTable.ForeignKeys[0].RefTable = UserProfilesTable
	UserSecVideoIdTable.ForeignKeys[0].RefTable = UserSecsTable
	UserSecVideoIdTable.ForeignKeys[1].RefTable = VideosTable
	UserSecCommentIdTable.ForeignKeys[0].RefTable = UserSecsTable
	UserSecCommentIdTable.ForeignKeys[1].RefTable = CommentsTable
	UserSecLikeIdTable.ForeignKeys[0].RefTable = UserSecsTable
	UserSecLikeIdTable.ForeignKeys[1].RefTable = LikesTable
	VideosLikeIdTable.ForeignKeys[0].RefTable = VideosTable
	VideosLikeIdTable.ForeignKeys[1].RefTable = LikesTable
	VideosCommentIdTable.ForeignKeys[0].RefTable = VideosTable
	VideosCommentIdTable.ForeignKeys[1].RefTable = CommentsTable
}
